# -*- coding: utf-8 -*-
"""main.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xu9l-jKTKSabsrDB2mLd89Pjo0RKB7N7
"""

import os
from flask import jsonify

def predict(request):
    # TFLite model
    model_file = 'gs://model_obeng/model.tflite' 
    interpreter = tf.lite.Interpreter(model_path=model_file)
    interpreter.allocate_tensors()

    # Preprocess input data from the request
    data = request.get_json()
    user_id = data['user_id']
    needed_engine = data['needed_engine']
    needed_tire = data['needed_tire']
    needed_body = data['needed_body']
    needed_interior = data['needed_interior']
    needed_oil = data['needed_oil']
    input_data = np.array([[user_id, needed_engine, needed_tire, needed_body, needed_interior, needed_oil]], dtype=np.float32)

    # Set the input tensor
    input_details = interpreter.get_input_details()
    interpreter.set_tensor(input_details[0]['index'], input_data)

    # Run the inference
    interpreter.invoke()

    # Get the output tensors
    output_details = interpreter.get_output_details()
    technician_id = int(np.argmax(interpreter.get_tensor(output_details[0]['index'])))
    covered = int(np.argmax(interpreter.get_tensor(output_details[1]['index'])))
    rating = int(np.argmax(interpreter.get_tensor(output_details[2]['index'])))

    # Create the response
    response = {
        'technician_id': technician_id,
        'covered': covered,
        'rating': rating
    }

    return jsonify(response)